version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Installing Terraform..."
      - wget https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
      - unzip terraform_1.5.0_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - terraform version
      
  pre_build:
    commands:
      - echo "Setting up Terraform workspace..."
      - mkdir -p /tmp/terraform-workspace
      - cd /tmp/terraform-workspace
      
      # S3에서 기존 Terraform 파일들 다운로드
      - echo "Downloading existing Terraform files from S3..."
      - aws s3 sync s3://$S3_BUCKET/terraform/ ./terraform/ || echo "No existing files"
      
      # 새로운 리소스 파일 생성
      - echo "Creating new Terraform file..."
      - mkdir -p terraform/$RESOURCE_TYPE
      - cat > terraform/$RESOURCE_TYPE/$RESOURCE_NAME.tf << EOF
      - $TERRAFORM_CODE
      - EOF
      
      # Backend 설정 파일 생성
      - cat > backend.tf << 'EOF'
      - terraform {
      -   backend "s3" {
      -     bucket = "$STATE_BUCKET"
      -     key    = "imported-resources/terraform.tfstate"
      -     region = "us-east-1"
      -   }
      - }
      - provider "aws" {
      -   region = "us-east-1"
      - }
      - EOF
      
  build:
    commands:
      - echo "Initializing Terraform..."
      - terraform init
      
      - echo "Importing resource to Terraform state..."
      - terraform import aws_$RESOURCE_TYPE.$RESOURCE_NAME $RESOURCE_ID
      
      - echo "Running terraform plan..."
      - terraform plan
      
      - echo "Applying Terraform configuration..."
      - terraform apply -auto-approve
      
  post_build:
    commands:
      - echo "Uploading updated Terraform files to S3..."
      - aws s3 sync ./terraform/ s3://$S3_BUCKET/terraform/
      
      - echo "Getting GitHub token from Secrets Manager..."
      - export GITHUB_TOKEN=$(aws secretsmanager get-secret-value --secret-id github-token --query SecretString --output text | jq -r .token)
      
      - echo "Cloning Git repository..."
      - git clone https://$GITHUB_TOKEN@github.com/Brilly-Bohyun/team05-aws-hackathon.git /tmp/git-repo
      - cd /tmp/git-repo
      
      - echo "Configuring Git..."
      - git config user.name "Terraform Sync Bot"
      - git config user.email "terraform-sync@company.com"
      
      - echo "Pulling latest changes..."
      - git pull origin main
      
      - echo "Copying Terraform files to Git repository..."
      - mkdir -p terraform/$RESOURCE_TYPE
      - cp /tmp/terraform-workspace/terraform/$RESOURCE_TYPE/$RESOURCE_NAME.tf terraform/$RESOURCE_TYPE/
      
      - echo "Checking for changes..."
      - |
        if git diff --quiet && git diff --cached --quiet; then
          echo "No changes to commit"
        else
          echo "Committing and pushing to Git..."
          git add terraform/$RESOURCE_TYPE/$RESOURCE_NAME.tf
          git commit -m "feat: Import $RESOURCE_TYPE resource '$RESOURCE_NAME' to Terraform
          
          Auto-imported from AWS console creation
          - Resource Type: $RESOURCE_TYPE
          - Resource ID: $RESOURCE_ID
          - Terraform State: Updated
          - Import Command: terraform import aws_$RESOURCE_TYPE.$RESOURCE_NAME $RESOURCE_ID"
          
          # 푸시 전 다시 한번 pull (충돌 방지)
          git pull --rebase origin main
          git push origin main
          echo "Successfully pushed to Git repository"
        fi
      
      - echo "Terraform import completed successfully!"
      - echo "Resource $RESOURCE_TYPE/$RESOURCE_NAME has been imported to Terraform state"
      - echo "Terraform code pushed to Git repository: $GIT_REPO_URL"